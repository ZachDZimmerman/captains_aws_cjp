#!groovy
import jenkins.model.*
import hudson.security.*
import jenkins.install.InstallState

//def instance = Jenkins.getInstance()

//println "--> creating local user 'admin'"
// Create user with custom pass
//def user = instance.getSecurityRealm().createAccount('admin', '{{ jenkins_default_admin_password }}')
//user.save()

//def strategy = new FullControlOnceLoggedInAuthorizationStrategy()
//strategy.setAllowAnonymousRead(false)
//instance.setAuthorizationStrategy(strategy)

//instance.save()

def instance = Jenkins.getInstance()
def hudsonRealm = new HudsonPrivateSecurityRealm(false)
def users = hudsonRealm.getAllUsers()
users_s = users.collect { it.toString() }

// Create the admin user account if it doesn't already exist.
if ("admin" in users_s) {
    println "Admin user already exists - updating password"

    def user = hudson.model.User.get('admin');
    def password = hudson.security.HudsonPrivateSecurityRealm.Details.fromPlainPassword('{{ jenkins_default_admin_password }}')
    user.addProperty(password)
    user.save()
}
else {
    println "--> creating local admin user"

    hudsonRealm.createAccount('admin', '{{ jenkins_default_admin_password }}')
    instance.setSecurityRealm(hudsonRealm)

    def strategy = new FullControlOnceLoggedInAuthorizationStrategy()
    instance.setAuthorizationStrategy(strategy)
    instance.save()
}